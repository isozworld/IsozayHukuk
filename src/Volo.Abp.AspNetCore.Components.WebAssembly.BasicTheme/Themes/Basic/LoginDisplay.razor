@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Volo.Abp.Users
@using Volo.Abp.MultiTenancy
@using Kaledar.HudutGecis.Menu
@inject ICurrentUser CurrentUser
@inject ICurrentTenant CurrentTenant
@inject IJSRuntime JsRuntime
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
<AuthorizeView>
    <Authorized>
@*        <Dropdown>
            <DropdownToggle Color="Color.None">
                @if (CurrentTenant.Name != null)
                {
                    <span><i>@CurrentTenant.Name</i>\@CurrentUser.UserName</span>
                }
                else
                {
                    <span>@CurrentUser.UserName</span>
                }
            </DropdownToggle>
            <DropdownMenu>
                @if (Menu != null)
                {
                    @foreach (var menuItem in Menu.Items)
                    {
                        <DropdownItem Clicked="@(() => NavigateToAsync(menuItem.Url, menuItem.Target))">@menuItem.DisplayName</DropdownItem>
                    }
                }
                <DropdownDivider />
                <DropdownItem Clicked="BeginSignOut">Logout</DropdownItem>
            </DropdownMenu>
        </Dropdown>*@
<div class="dropdown">
				<!--begin::Toggle-->
				<div class="topbar-item" data-toggle="dropdown" data-offset="0px,0px">
					<div class="btn btn-icon w-auto btn-clean d-flex align-items-center btn-lg px-2">
						<span class="text-muted font-weight-bold font-size-base d-none d-md-inline mr-1">Merhaba,</span>
						<span class="text-dark-50 font-weight-bolder font-size-base d-none d-md-inline mr-3">
						  @if (CurrentTenant.Name != null)
                {		<i>@CurrentTenant.Name</i>@CurrentUser.UserName
			}else{
				@CurrentUser.UserName
			}</span>
						<span class="symbol symbol-35 symbol-light-success">
							<span class="symbol-label font-size-h5 font-weight-bold">@CurrentUser.UserName.Substring(0,1)</span>
						</span>
					</div>
				</div>
				<!--end::Toggle-->
				<!--begin::Dropdown-->
				<div class="dropdown-menu p-0 m-0 dropdown-menu-right dropdown-menu-anim-up dropdown-menu-lg p-0">
					<!--begin::Header-->
					<div class="d-flex align-items-center justify-content-between flex-wrap p-8 bgi-size-cover bgi-no-repeat rounded-top" style="background-image: url(/assets/media/misc/bg-1.jpg)">
						<div class="d-flex align-items-center mr-2">
							<!--begin::Symbol-->
							<div class="symbol bg-white-o-15 mr-3">
								<span class="symbol-label text-success font-weight-bold font-size-h4">@CurrentUser.UserName.Substring(0,1)</span>
							</div>
							<!--end::Symbol-->
							<!--begin::Text-->
							<div class="text-white m-0 flex-grow-1 mr-3 font-size-h5">@CurrentUser.Name @CurrentUser.SurName</div>
							<!--end::Text-->
						</div>
					</div>
					<!--end::Header-->
					<!--begin::Nav-->
					<div class="navi navi-spacer-x-0 pt-5">
		                @if (Menu != null)
						{
							@foreach (var menuItem in Menu.Items)
							{
								<!--begin::Item-->
								<a @onclick="@(() => NavigateToAsync(menuItem.Url, menuItem.Target))" href="#" class="navi-item px-8">
									<div class="navi-link">
										<div class="navi-icon mr-2">
											<i class="flaticon2-calendar-3 text-success"></i>
										</div>
										<div class="navi-text">
											@{
												var customData = menuItem.CustomData.As<HudutUserMenuCustomData>();
											}
											<div class="font-weight-bold">@menuItem.DisplayName</div>
											<div class="text-muted">@customData?.Aciklama</div>
										</div>
									</div>
								</a>
								<!--end::Item-->
							}
						}
						<!--begin::Footer-->
						<div class="navi-separator mt-3"></div>
						<div class="navi-footer px-8 py-5">
							<a href="#" @onclick="BeginSignOut" class="btn btn-light-primary font-weight-bold">Sign Out</a>
						</div>
						<!--end::Footer-->
					</div>
					<!--end::Nav-->
				</div>
				<!--end::Dropdown-->
			</div>
    </Authorized>
    <NotAuthorized>
        <a class="btn btn-primary m-4" href="/authentication/login">
            <i class="fa fa-sign-in-alt"></i> GİRİŞ
        </a>
    </NotAuthorized>
</AuthorizeView>
@code{

    private async Task NavigateToAsync(string uri, string target = null)
    {
        if (target == "_blank")
        {
            await JsRuntime.InvokeVoidAsync("open", uri, target);
        }
        else
        {
            Navigation.NavigateTo(uri);
        }
    }

    private async Task BeginSignOut()
    {
        await SignOutManager.SetSignOutState();
        await NavigateToAsync("authentication/logout");
    }
}
