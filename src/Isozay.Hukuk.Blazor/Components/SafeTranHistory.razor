@using Isozay.Hukuk.Safes
@using Isozay.Hukuk.Currencies
@using Isozay.Hukuk.Clients
@using Isozay.Hukuk.Permissions
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.Application.Dtos
@using Volo.Abp.BlazoriseUI

@inject Volo.Abp.AspNetCore.Components.Messages.IUiMessageService Messages
@inject Currencies.ICurrencyService currencyService
@inject Fiches.IFicheService ficheService
@inject Safes.ISafeService safeService
@inject IJSRuntime JSRuntime

<Modal class="modal fade show" id="SafeTranHistoryModal" style="display: block; background-color:rgba(10,10,10,.5)">
    <ModalContent Centered Size="ModalSize.ExtraLarge">
        <Form>
            <ModalHeader>
                <ModalTitle>@entity.Name Bilgisi - Mevcut Kasa Değeri: @safeVal</ModalTitle>
                <CloseButton Clicked="ModalCancel" />
            </ModalHeader>
            <ModalBody>
                <DataGrid TItem="SafeTranDto"
                          Data="@safeTranList"
                          ShowPager="true">
                    <DataGridColumns>
                        <DataGridColumn TItem="SafeTranDto" Caption="Date">
                            <DisplayTemplate>
                                @context.TransactionDate.ToShortDateString()
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridColumn TItem="SafeTranDto" Caption="Client">
                            <DisplayTemplate>
                                @setName(context)
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridColumn TItem="SafeTranDto" Caption="Fiche">
                            <DisplayTemplate>
                                @context.Fiche.FicheNo
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridColumn TItem="SafeTranDto" Caption="Description">
                            <DisplayTemplate>
                                @context.Description
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridColumn TItem="SafeTranDto" Caption="Debt">
                            <DisplayTemplate>
                                @context.Debt.ToString("G29")
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridColumn TItem="SafeTranDto" Caption="Credit">
                            <DisplayTemplate>
                                @context.Credit.ToString("G29")
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridColumn TItem="SafeTranDto" Caption="Balance">
                            <DisplayTemplate>
                                @context.Balance.ToString("G29")
                            </DisplayTemplate>
                        </DataGridColumn>
                    </DataGridColumns>
                </DataGrid>
            </ModalBody>
            <ModalFooter>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@code {
    [Parameter] public EventCallback<bool> OnClose { get; set; }
    [Parameter] public SafeDto entity { get; set; }
    string safeVal;
    List<SafeTranDto> safeTranList;

    protected override async Task OnInitializedAsync()
    {

        safeTranList = await safeService.GetSafeTransListAsync(entity.Id);
        await base.OnInitializedAsync();
        StateHasChanged();
    }

    private string setName(SafeTranDto s)
    {
        if (s.Client == null)
        {
            return "";
        }
        return s.Client.Name;
    }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }
}

