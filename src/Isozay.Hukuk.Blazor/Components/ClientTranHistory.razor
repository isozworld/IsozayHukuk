@using Isozay.Hukuk.Clients
@using Isozay.Hukuk.Currencies
@using Isozay.Hukuk.Permissions
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.Application.Dtos
@using Volo.Abp.BlazoriseUI

@inject Volo.Abp.AspNetCore.Components.Messages.IUiMessageService Messages
@inject Clients.IClientService clientService
@inject Currencies.ICurrencyService currencyService
@inject IJSRuntime JSRuntime

<Modal class="modal fade show" id="ClientTranHistoryModal" style="display: block; background-color:rgba(10,10,10,.5)">
    <ModalContent Centered Size="ModalSize.ExtraLarge">
        <Form>
            <ModalHeader>
                <ModalTitle>@entity.Name Transfer Bilgisi</ModalTitle>
                <CloseButton Clicked="ModalCancel" />
            </ModalHeader>
            <ModalBody>

                <Row>
                    <Column ColumnSize="ColumnSize.IsFull">
                        <Alert Color="Color.Primary" Visible>

                            <DataGrid Data="@tranlist" ShowPager="true" RowStyling="@OnRowStyling">
                                <DataGridColumns>
                                    <DataGridColumn TItem="ClientTranDto" Caption="Amount">
                                        <DisplayTemplate>
                                            @context.Amount.ToString("G29")
                                        </DisplayTemplate>
                                    </DataGridColumn>
                                    <DataGridColumn TItem="ClientTranDto" Caption="Currency">
                                        <DisplayTemplate>
                                            @getCurr(context.CurrencyId)
                                        </DisplayTemplate>
                                    </DataGridColumn>
                                    <DataGridColumn TItem="ClientTranDto" Caption="Description">
                                        <DisplayTemplate>
                                            @context.Description
                                        </DisplayTemplate>
                                    </DataGridColumn>
                                    <DataGridColumn TItem="ClientTranDto" Caption="Date">
                                        <DisplayTemplate>
                                            @context.TransactionDate
                                        </DisplayTemplate>
                                    </DataGridColumn>
                                </DataGridColumns>
                            </DataGrid>

                        </Alert>
                    </Column>
                </Row>

            </ModalBody>
            <ModalFooter>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@code {
    [Parameter] public EventCallback<bool> OnClose { get; set; }
    [Parameter] public ClientDto entity { get; set; }
    IReadOnlyList<CurrencyDto> currencies = Array.Empty<CurrencyDto>();
    List<ClientTranDto> tranlist;

    protected override async Task OnInitializedAsync()
    {
        currencies = (await currencyService.GetListAsync());

        tranlist = await clientService.GetClientTranDtoHistory(entity.Id);

        await base.OnInitializedAsync();

        StateHasChanged();
    }

    private void OnRowStyling(ClientTranDto dto, DataGridRowStyling styling)
    {
        if (dto.IO == 'I')
            styling.Style = "color: red;";
        else
            styling.Color = "color: black;";
    }

    private String getCurr (long id)
    {
        String temp = "";
        foreach (var c in currencies) { if (c.Id == id) temp = c.Name; }
        return temp;
    }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }
}

