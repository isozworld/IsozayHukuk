@using Volo.Abp.Application.Dtos
@using Isozay.Hukuk.Clients
@using Isozay.Hukuk.Localization
@inject AbpBlazorMessageLocalizerHelper<HukukResource> LH
@inherits AbpCrudPageBase<IClientService, ClientDto, long, PagedAndSortedResultRequestDto, CreateUpdateClientDto>

<Modal class="modal fade show" id="ClientCreate" style="display: block; background-color:rgba(10,10,10,.8)">
	<ModalContent Centered IsCentered="true">
		<Form class="modal-content">
			<ModalHeader>
				<ModalTitle>@L["Yeni Müşteri/Müvekkil"]</ModalTitle>
				<CloseButton @onclick="ModalCancel" />
			</ModalHeader>
			<ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation Validator="@ValidationRule.IsNotEmpty" MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>Ad Soyad/Unvan</FieldLabel>
                            <TextEdit @bind-Text="NewEntity.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None" MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>Telefon</FieldLabel>
                            <TextEdit @bind-Text="NewEntity.Phone" />
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None" MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>Faks</FieldLabel>
                            <TextEdit @bind-Text="NewEntity.Fax" />
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None" MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>Adres</FieldLabel>
                            <MemoEdit @bind-Text="NewEntity.Address" />
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None" MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>V.Dairesi</FieldLabel>
                            <TextEdit @bind-Text="NewEntity.TaxDep" />
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None" MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>V.No</FieldLabel>
                            <TextEdit @bind-Text="NewEntity.TaxNumber" />
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None" MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>Tip</FieldLabel>
                            <Select TValue="ClientType" @bind-SelectedValue="@NewEntity.ClientType">
                                @foreach (ClientType ClientTypeValue in Enum.GetValues(typeof(ClientType)))
                                {
                                    <SelectItem TValue="ClientType" Value="@((ClientType) ClientTypeValue)">
                                        @ClientTypeValue.GetDisplayName()
                                    </SelectItem>
                                }
                            </Select>
                        </Field>
                    </Validation>
                    <Validation Validator="@ValidationRule.None" MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>İlişkilendirme</FieldLabel>
                            <Check TValue="bool" Checked="@isRelated" CheckedChanged="@OnRelationChanged">Bu müvekkil ilişkilendirsin</Check>
                        </Field>
                    </Validation>
                    @if (isRelated)
                    {
                        <Validation Validator="@ValidationRule.IsNotEmpty" MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>İlişkili Müvekkil</FieldLabel>
                                <ClientSearch Selected="parentClient" SelectedChanged="@parentClientChanged" DisableCreate="true" />
                            </Field>
                            <Field>
                                <FieldLabel>İlişki Açıklaması</FieldLabel>
                                <TextEdit @bind-Text="@relationDescription" />
                            </Field>
                        </Validation>
                    }
                </Validations>
			</ModalBody>
			<ModalFooter>
				<Button Color="Blazorise.Color.Secondary"
						@onclick="ModalCancel">
					İptal
				</Button>
				<Button Color="Blazorise.Color.Primary"
						Type="@Blazorise.ButtonType.Submit"
						PreventDefaultOnSubmit="true"
						@onclick="ModalOk">
					Kaydet
				</Button>
			</ModalFooter>
		</Form>
	</ModalContent>
</Modal>


@code {
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }
    private bool isRelated;
    private ClientDto parentClient { get; set; }
    private string relationDescription { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private void OnRelationChanged(bool val)
    {
        isRelated = val;
        if (!val) parentClient = null;
        StateHasChanged();
    }

    private void parentClientChanged(ClientDto dto)
    {
        parentClient = dto;
        StateHasChanged();
    }

    private Task ModalOk()
    {
        if (isRelated)
        {
            AppService.CreateClientRelation(NewEntity, parentClient.Id, relationDescription);
        }
        else
        {
            CreateEntityAsync();
        }
        return ModalCancel();
    }
}

