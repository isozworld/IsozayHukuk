@using Blazored.Typeahead;
@using Isozay.Hukuk.Clients
@inject IClientService clientService
@inherits Volo.Abp.AspNetCore.Components.AbpComponentBase
<div class="input-group">
    <div class="form-control inp-g" style="padding:0">
        <strong class="mr-2 text-plaka">@Selected?.ClientType.GetDisplayName()</strong> <span>@Selected?.Name</span> 
        <BlazoredTypeahead SearchMethod="SearchClient"
                            
                           TItem="ClientDto"
                           TValue="ClientDto"
                           Value="Selected"
                            
                            ValueChanged="@( (ClientDto c) => SelectedResultChanged(c) )"
                            ValueExpression="@( () => Selected )"                            
               
                           class="form-control"
                           type="text"
                           Placeholder="Müşteri / Müvekkil"
                           Debounce="500">
            <SelectedTemplate >
                <strong class="mr-2 text-plaka">@Selected?.ClientType.GetDisplayName()</strong> <span>@Selected?.Name</span> 
            </SelectedTemplate>
            <ResultTemplate>
                <strong class="mr-2 text-plaka">@context.ClientType.GetDisplayName()</strong> @context.Name
            </ResultTemplate>
            <NotFoundTemplate>
               Müşteri / Müvekkil Bulunamadı.
            </NotFoundTemplate>
        </BlazoredTypeahead>
    </div>
    <div class="input-group-append">

        <Button title="Yeni Oluştur" class="btn btn-icon btn-light-info" @onclick="() => OpenCreateDialog()">
            <span class="svg-icon">
                <svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <rect fill="#000000" x="4" y="10" width="16" height="4" rx="1.5" />
                        <rect fill="#000000" x="10" y="4" width="4" height="16" rx="1.5" />
                    </g>
                </svg>
            </span>
        </Button>
        @if (CreateDialogOpen)
        {
            <AddClient OnClose="@OnCreateDialogClose"></AddClient>
        }
        
    </div>
</div>

@code {
    [Parameter]
    public ClientDto Selected { get; set; }
    [Parameter]
    public EventCallback<ClientDto> SelectedChanged { get; set; }
    public Task ShowList() => Task.CompletedTask;

    public bool CreateDialogOpen { get; set; }

    private void OnCreateDialogClose(bool accepted)
    {
        CreateDialogOpen = false;
        StateHasChanged();
    }

    private void OpenCreateDialog()
    {
        CreateDialogOpen = true;
        StateHasChanged();
    }

    private async Task SelectedResultChanged(ClientDto result)
    {
        if (result == null) return;
        Selected = result;
        await SelectedChanged.InvokeAsync(Selected);
    }
    private async Task<IEnumerable<ClientDto>> SearchClient(string searchText)
    {
        return   await clientService.Search(searchText);

    }

}